name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies (root)
      run: |
        if [ -f "package-lock.json" ]; then
          npm ci || npm install
        else
          echo "No package-lock.json found in root, skipping npm install"
        fi
      continue-on-error: true

    - name: Run npm audit (root)
      run: |
        if [ -f "package.json" ]; then
          npm audit --audit-level=moderate || echo "npm audit completed with warnings"
        fi
      continue-on-error: true

    - name: Install dependencies (website)
      run: |
        if [ -f "website/package-lock.json" ]; then
          cd website && (npm ci || npm install)
        else
          echo "No package-lock.json found in website, skipping npm install"
        fi
      continue-on-error: true

    - name: Run npm audit (website)
      run: |
        if [ -f "website/package.json" ]; then
          cd website && (npm audit --audit-level=moderate || echo "npm audit completed with warnings")
        fi
      continue-on-error: true

    - name: Install dependencies (point-solutions)
      run: |
        if [ -f "src/point-solutions/libraries/package-lock.json" ]; then
          cd src/point-solutions/libraries && (npm ci || npm install)
        else
          echo "No package-lock.json found in point-solutions, skipping npm install"
        fi
      continue-on-error: true

    - name: Run npm audit (point-solutions)
      run: |
        if [ -f "src/point-solutions/libraries/package.json" ]; then
          cd src/point-solutions/libraries && (npm audit --audit-level=moderate || echo "npm audit completed with warnings")
        fi
      continue-on-error: true

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, typescript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript"

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0'

    - name: Check if Trivy results exist
      id: check-trivy
      run: |
        if [ -f "trivy-results.sarif" ]; then
          echo "trivy-results-exist=true" >> $GITHUB_OUTPUT
        else
          echo "trivy-results-exist=false" >> $GITHUB_OUTPUT
        fi

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: steps.check-trivy.outputs.trivy-results-exist == 'true'
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-2.0, GPL-3.0, AGPL-3.0, LGPL-2.1, LGPL-3.0